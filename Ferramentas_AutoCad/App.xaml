<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Ferramentas_DLM"
             x:Class="Ferramentas_DLM.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="2"/>
            </Style>
            <Style TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="MinWidth" Value="35"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                            <Border Margin="0" BorderThickness="1,0,1,1">
                                <Image Width="16" Height="16" Source="{Binding Imagem}" ToolTip="{Binding}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="Margin" Value="2"/>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="CharacterCasing" Value="Upper"/>
                <EventSetter Event="UIElement.GotFocus" Handler="seleciona_tudo"/>

                <Setter Property="Padding" Value="2"/>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Yellow" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Expander}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.2"/>
                    </Setter.Value>

                </Setter>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>

            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="2"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2"/>
            </Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type Separator}">
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="AlternatingRowBackground">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
                <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="LightBlue" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>

            </Style>
            <Style TargetType="{x:Type DataGridCell}">

                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Foreground" Value="Black"/>


                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>


            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2"/>
            </Style>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="MinHeight" Value="20"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
